#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

struct Job
{
    int id;
    int deadline;
    int profit;
};

bool compareJobs(const Job &job1, const Job &job2)
{
    return job1.profit > job2.profit;
}

void scheduleJobs(const vector<Job> &jobs)
{
    int n = jobs.size();
    vector<bool> slots(n, false);
    vector<int> result(n, -1);

    for (int i = 0; i < n; i++)
    {
        for (int j = min(n, jobs[i].deadline) - 1; j >= 0; j--) // reverse timeslto start from min value
        {
            if (!slots[j])
            {
                result[j] = i;
                slots[j] = true;
                break;
            }
        }
    }

    cout << "Job Sequence: ";
    for (int i = 0; i < n; i++)
    {
        if (result[i] != -1)
        {
            cout << jobs[result[i]].id << " "; // just print the id
        }
    }
    cout << endl;

    int totalProfit = 0;
    for (int i = 0; i < n; i++)
    {
        if (result[i] != -1)
        {
            totalProfit += jobs[result[i]].profit;
        }
    }

    cout << "Total Profit: " << totalProfit << endl;
}

int main()
{
    int n;
    cout << "Enter the number of jobs: ";
    cin >> n;

    vector<Job> jobs(n);

    cout << "Enter job details (id, deadline, profit) for each job:\n";
    for (int i = 0; i < n; i++)
    {
        cout << "Job " << i + 1 << ": ";
        cin >> jobs[i].id >> jobs[i].deadline >> jobs[i].profit;
    }

    sort(jobs.begin(), jobs.end(), compareJobs);

    scheduleJobs(jobs);

    return 0;
}
